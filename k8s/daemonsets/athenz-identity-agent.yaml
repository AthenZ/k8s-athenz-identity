apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: athenz-identity-agent
  name: athenz-identity-agent
spec:
  selector:
    matchLabels:
      app: athenz-identity-agent
  template:
    metadata:
      labels:
        app: athenz-identity-agent
    spec:
      serviceAccountName: athenz-identity-agent
      volumes:
      - { name: config-volume, configMap: { name: athenz-config } }
      - { name: identity-dir, hostPath: { path: /var/athenz/node/identity, type: Directory } }
      - { name: volume-source, hostPath: { path: /var/athenz/volumes } }
      - { name: driver-dir, hostPath: { path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec/athenz.kubernetes.io~athenz-volume-driver, type: Directory } }
      - { name: agent-dir, hostPath: { path: /var/athenz/agent, type: Directory } }
      containers:
      - name: main
        image: local/k8s-athenz-identity-agent:latest
        imagePullPolicy: Never
        env: [ { name: NODE_NAME, valueFrom: { fieldRef: { fieldPath: spec.nodeName }}}]
        args:
        - "--cert=/var/athenz/node/identity/service.cert"
        - "--driver-source=/usr/bin/athenz-volume-driver"
        - "--driver-target=/driver-mount/athenz-volume-driver"
        - "--jwt-endpoint=https://athenz-jwt-service.k8s-admin.svc.cluster.local:4443/v1"
        - "--key=/var/athenz/node/identity/service.key"
        - "--listen=unix:///var/athenz/agent/agent.sock"
        - "--pod-endpoint=http://${NODE_NAME}:10255"
        volumeMounts:
        - { name: config-volume,  mountPath: /var/cluster, readOnly: true}
        - { name: driver-dir,     mountPath: /driver-mount }
        - { name: agent-dir,      mountPath: /var/athenz/agent }
        - { name: volume-source,  mountPath: /var/athenz/volumes  }
        - { name: identity-dir,   mountPath: /var/athenz/node/identity, readOnly: true }
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
